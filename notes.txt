url--
http://localhost:5000
http://localhost:5000
 
 ===============================
 Debug:
 ===============================

 ===============================
 
 dotnet watch --no-hot-reload   

docker run --name dev –e POSTGRES_USER=admin –e POSTGRES_PASSWORD=shiaju –p 5432:5432 -d postgres:latest
docker run --name dev -e POSTGRES_USER=admin -e POSTGRES_PASSWORD=shiaju- p 5455:5432 -d postgres:latest -e POSTGRES_DB=postgresDB 

s
docker/getting-started –d postgres:latest 
 
 npm start


==========
Nuget pakeges:

API:
RefreshSystem.IdentityModel.Tokens.Jwt by Microsoft

========
drop table
cd ..
dotnet ef database drop  -p Persistence -s API
=========
DB migrations
cd ..

dotnet ef migrations add new -p Persistence -s API

dotnet ef migrations add PostGress -p Persistence -s API

======

docker

docker build -t shaijukumar/reactivities .
docker push shaijukumar/reactivities:latest
fly deploy

docker run --rm -it -p 8080:80 shaijukumar/reactivities 


docker login

c


=============
fly.io
============

flyctl auth signup

fly launch --image shaijukumar/reactivities:latest

flyctl deploy

fly secrets list
fly secrets set TokenKey=vfqVrLtKKL47p25UWQgyb2LamPvJgbds



===========

.github/workflows/docker-push.yml

===================

Postgres cluster virto-db created
  Username:    postgres
  Password:    c4vxZGlhoJDTbK0
  Hostname:    virto-db.internal
  Proxy port:  5432
  Postgres port:  5433
  Connection string: postgres://postgres:c4vxZGlhoJDTbK0@virto-db.internal:5432

Save your credentials in a secure place -- you won't be able to see them again!

Connect to postgres
Any app within the shaiju.app1@gmail.com organization can connect to this Postgres using the above connection string

Now that you've set up Postgres, here's what you need to understand: https://fly.io/docs/postgres/getting-started/what-you-should-know/

=============================
//Create DB - run in command not in vs code
docker run --name dev –e POSTGRES_USER=admin –e POSTGRES_PASSWORD=shiaju –p 5432:5432 -d postgres:latest


docker container ls  

//Create image in local docker
docker build -t shaijukumar/reactivities .

//run image local
docker run --rm -it -p 8080:80 shaijukumar/reactivities 

  //login to dcker, first time
  docker login

  //push to docker server 
  docker push shaijukumar/reactivities:latest

//flyctl signup, first time
//install flyctl
flyctl auth signup

fly help

  //fly launch 
  fly launch --image shaijukumar/reactivities:latest

//deploy from github

flyctl deploy

tom@test.com
Pa$$w0rd

===================

npm run build